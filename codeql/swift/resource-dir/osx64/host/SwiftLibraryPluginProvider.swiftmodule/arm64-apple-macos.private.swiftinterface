// swift-interface-format-version: 1.0
// swift-compiler-version: Apple Swift version 6.0.3 effective-5.10 (swiftlang-6.0.3.1.9 clang-1600.0.30.1)
// swift-module-flags: -target arm64-apple-macosx13.0 -enable-objc-interop -enable-library-evolution -module-link-name SwiftLibraryPluginProvider -swift-version 5 -O -module-abi-name CompilerSwiftLibraryPluginProvider -module-name SwiftLibraryPluginProvider -package-name Toolchain
import Swift
@_spi(PluginMessage) import SwiftCompilerPluginMessageHandling
import SwiftSyntaxMacros
import _Concurrency
import _SwiftConcurrencyShims
@_spi(PluginMessage) @_hasMissingDesignatedInitializers public class LibraryPluginProvider : SwiftCompilerPluginMessageHandling.PluginProvider {
  @_spi(PluginMessage) @_Concurrency.MainActor public static let shared: SwiftLibraryPluginProvider.LibraryPluginProvider
  @_spi(PluginMessage) public var features: [SwiftCompilerPluginMessageHandling.PluginFeature] {
    @_spi(PluginMessage) get
  }
  @_spi(PluginMessage) public func loadPluginLibrary(libraryPath: Swift.String, moduleName: Swift.String) throws
  @_spi(PluginMessage) public func resolveMacro(moduleName: Swift.String, typeName: Swift.String) throws -> any SwiftSyntaxMacros.Macro.Type
  @_spi(PluginMessage) @objc deinit
}
