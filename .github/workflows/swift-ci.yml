name: swift-ci

on:
  push:
    branches: [ main ]
  pull_request:
    branches: [ main ]

jobs:
  validate:
    runs-on: macos-14
    steps:
      - name: Checkout
        uses: actions/checkout@v4

      - name: Setup Environment
        run: |
          echo "=== Environment Info ==="
          sw_vers
          echo "=== Xcode Version ==="
          xcodebuild -version
          echo "=== Swift Version ==="
          swift --version
          echo "=== Working Directory ==="
          pwd
          ls -la
          echo "=== PinakleanApp Directory ==="
          ls -la PinakleanApp

      - name: Build Validation
        run: |
          cd PinakleanApp
          echo "=== Building PinakleanCore ==="
          swift build --configuration debug --target PinakleanCore --verbose
          echo "=== Build completed successfully ==="

      - name: Generate Coverage
        if: always()
        working-directory: PinakleanApp
        run: |
          swift test --enable-code-coverage || true
          mkdir -p coverage
          # Find the actual test binary dynamically
          TEST_BIN=$(find .build -name "*.xctest" -type d | head -n1)
          PROF_FILE=$(find .build -name "default.profdata" | head -n1)
          if [ -n "$TEST_BIN" ] && [ -n "$PROF_FILE" ]; then
            xcrun llvm-cov export \
              "$TEST_BIN/Contents/MacOS/$(basename "$TEST_BIN" .xctest)" \
              -format text \
              -instr-profile "$PROF_FILE" > coverage/coverage.txt || true
          else
            echo "Coverage artifacts not found; creating empty coverage file" > coverage/coverage.txt
          fi

      - name: Upload Coverage Artifact
        if: always()
        uses: actions/upload-artifact@v4
        with:
          name: coverage-macos
          path: PinakleanApp/coverage

